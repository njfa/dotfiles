# tmux起動時のシェルをzshにする
set -g default-shell $SHELL

# Escキーの遅延を解消
set -g escape-time 0

# nvimのcheckhealthでWARNINGが出ていたため追加
set -g focus-events on

set -g history-limit 30000

# vimが起動しているかを判定する
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

###########################################################
# 外観
###########################################################

# tmuxを256色表示できるようにする
set -g default-terminal "tmux-256color"
set -as terminal-overrides ",$TERM:Tc"

# Undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Check if we are in WSL
if-shell 'test -n "$WSL_DISTRO_NAME"' {
  set -as terminal-overrides ',*:Setulc=\E[58::2::::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' # underscore colours - needs tmux-3.0 (wsl2 in Windows Terminal)
}

# message text
set-option -g message-style bg="#FE9EA1",fg="#141B2E"

############################
# ステータスバー
############################

# ステータスバー
## ステータスバーをトップに配置する
set -g status-position top

# ウィンドウ番号の左寄せ
set -g status-justify left

# ステータスバーを描画し直さない
set -g status-interval 0

# ウィンドウのインデックスを1から開始
set -g base-index 1

# ペインのインデックスを1から開始
setw -g pane-base-index 1

# ステータスバーの色を設定する
set -g status-fg "#ffffff"
set -g status-bg "#141B2E"

# ステータスバー左のサイズ
set -g status-left-length 20

# 表示内容
set -g status-left ''
set -g status-right '#[fg=#ffffff bold]  #(date "+%Y/%m/%d %H:%M") #[fg=#8F595B]┊#[fg=#ffffff] #(date "+%a")  #[fg=#ffffff,bg=#141B2E]#[default]'
setw -g window-status-format "#[fg=#FE9EA1 dim,bg=#141B2E,align=centre]  #W  #[default]"
setw -g window-status-current-format "#[fg=#FE9EA1,bg=#141B2E,align=centre]#[fg=#ffffff bold, us=#FE9EA1 underscore]  #W  #[default]"

############################
# ペイン
############################

# 非アクティブなペインは背景色を変える
set -g window-style 'bg=#161E29'
set -g window-active-style 'bg=#141B2E'

set -g pane-active-border-style "fg=#41517D,bg=#141B2E"
set -g pane-border-style "fg=#737aa2,bg=#141B2E"

# ペイン毎のステータス表示
set -g pane-border-status bottom
set -g pane-border-format "#[fg=#ffffff,bg=#141B2E,align=right]  Ss #S #[fg=#8F595B]┊#[fg=#ffffff] Pn #{pane_pid} #[fg=#8F595B]┊#[fg=#ffffff] #(tmux-get-hostname.sh #{pane_current_command} #{pane_pid})  #[fg=#141B2E,bg=#ffffff]#[default]"
# set -g pane-border-format "#(tmux-pane-border.sh #{pane_current_path} #{pane_current_command} #{pane_pid})"

###########################################################
# キーバインド (normal mode)
###########################################################

# prefixキーをC-oに変更
set -g prefix C-o

# C-bのキーバインドを解除
unbind C-b

# r で設定をリロード
bind r 'source-file ~/.tmux.conf; display " Reload config! (~/.tmux.conf)"'
# bind r if-shell "$is_vim" 'send-keys C-e r' 'source-file ~/.tmux.conf; display "Reload config! (~/.tmux.conf)"'
bind -n M-. source-file ~/.tmux.conf \; display " Reload config! (~/.tmux.conf)"

# ウィンドウを作成
bind -n 'M-c' 'new-window'
bind -n 'M-q' 'detach-client'

# x でペインをkill
bind -r x kill-pane
# bind -n M-x kill-pane

# ウィンドウ移動
bind -r n 'next-window'
bind -r p 'previous-window'
bind -n M-n 'next-window'
bind -n M-b 'previous-window'

# vimのキーバインドでペインを移動する
bind h 'select-pane -L'
bind j 'select-pane -D'
bind k 'select-pane -U'
bind l 'select-pane -R'
bind -n M-h 'select-pane -L'
bind -n M-j 'select-pane -D'
bind -n M-k 'select-pane -U'
bind -n M-l 'select-pane -R'
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# ウィンドウ一覧
bind w 'choose-tree -s'
bind -n M-w 'choose-tree -s'

# ペインの分割
bind e split-window -h
bind i split-window -v
bind -n M-e split-window -h
bind -n M-i split-window -v

# マウス操作を有効にする
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
bind a setw synchronize-panes \; display "synchronize-panes #{?pane_synchronized,on,off}"
bind -n M-a setw synchronize-panes \; display "synchronize-panes #{?pane_synchronized,on,off}"

# 中央クリックでメニューを表示
unbind -n MouseDown2Pane
bind -n MouseDown2Pane      display-menu -T "#[align=centre]#{window_index}:#{window_name}" -t = -x W -y S \
  "Swap Left"                         l "swap-window -t:-1"                                  \
  "Swap Right"                        r "swap-window -t:+1"                                  \
  "#{?pane_marked_set,,-}Swap Marked" s swap-window                                          \
  ""                                                                                         \
  Kill                                X kill-window                                          \
  Respawn                             R "respawn-window -k"                                  \
  "#{?pane_marked,Unmark,Mark}"       m "select-pane -m"                                     \
  Rename                              n "command-prompt -I \"#W\" \"rename-window -- '%%'\"" \
  ""                                                                                         \
  "New After"                         w "new-window -a"                                      \
  "New At End"                        W new-window

###########################################################
# キーバインド (copy mode)
###########################################################

# コピーモードでvimキーバインドを使う
setw -g mode-keys vi

# prefix + vでコピーモード
bind v copy-mode \; display "Copy mode!"
bind -n M-v copy-mode \; display "Copy mode!"

# 'v' で選択を始める
bind -T copy-mode-vi v send -X begin-selection

# 'V' で行選択
bind -T copy-mode-vi V send -X select-line

# 'C-v' で矩形選択
bind -T copy-mode-vi C-v send -X rectangle-toggle

# Escapeでコピーモードを終了
bind -T copy-mode-vi Escape send-keys -X cancel

# for WSL
# yでヤンク
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "win32yank.exe -i" \; display "Copy!"

## Enterでヤンク
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "win32yank.exe -i" \; display "Copy!"

# ドラッグでヤンク
# unbind -T copy-mode-vi MouseDragEnd1Pane

# 右クリックでペースト
unbind -n MouseDown3Pane
bind -n MouseDown3Pane run "win32yank.exe -o | tmux load-buffer - && tmux paste-buffer"

# *ではりつけ
bind p run "win32yank.exe -o | tmux load-buffer - && tmux paste-buffer"
bind -n M-p run "win32yank.exe -o | tmux load-buffer - && tmux paste-buffer"

