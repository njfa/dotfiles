// 既定値を上書きするには、このファイル内にキー バインドを挿入します
[
    ///////////////////////////////////////////////////////////////////////////////////////
    // ViewGroup、sidobar、terminal、panel間の移動、操作
    ///////////////////////////////////////////////////////////////////////////////////////
    // Prefix: ctrl+w
    // エディタ内の操作はvscodevimの設定項目で設定する

    // sidebar、panelからエディタにフォーカスする
    {
        "key": "ctrl+'",
        "command": "workbench.action.focusActiveEditorGroup"
    },

    // パネルにフォーカスする
    {
        "key": "ctrl+.",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+.",
        "command": "workbench.action.focusPanel",
        "when": "editorFocus"
    },

    // サイドバーにフォーカスする
    {
        "key": "ctrl+s",
        "command": "workbench.action.focusSideBar",
        "when": "!sideBarFocus"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "sideBarFocus"
    },

    // エディタの移動
    {
        "key": "ctrl+h",
        "command": "workbench.action.previousEditor",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.nextEditor",
        "when": "!terminalFocus"
    },

    // vscodevimが使えない状態のエディタグループ移動
    {
        "key": "ctrl+w h",
        "command": "workbench.action.focusLeftGroup",
        "when": "inSettingsSearch || inKeybindings || inSettingsEditor || activeEditorGroupEmpty"
    },
    {
        "key": "ctrl+w j",
        "command": "workbench.action.focusBelowGroup",
        "when": "inSettingsSearch || inKeybindings || inSettingsEditor || activeEditorGroupEmpty"
    },
    {
        "key": "ctrl+w k",
        "command": "workbench.action.focusAboveGroup",
        "when": "inSettingsSearch || inKeybindings || inSettingsEditor || activeEditorGroupEmpty"
    },
    {
        "key": "ctrl+w l",
        "command": "workbench.action.focusRightGroup",
        "when": "inSettingsSearch || inKeybindings || inSettingsEditor || activeEditorGroupEmpty"
    },

    // sidebarにフォーカスがある状態のエディタグループ移動
    {
        "key": "ctrl+w l",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "sideBarFocus"
    },

    ///////////////////////////////////////////////////////////////////////////////////////
    // 検索系
    ///////////////////////////////////////////////////////////////////////////////////////

    {
        "key": "enter",
        "command": "extension.multiCommand.execute",
        "args": {
            "sequence": [
                "workbench.action.focusActiveEditorGroup",
                "extension.vim_escape"
            ]
        },
        "when": "findInputFocussed || replaceInputFocussed"
    },
    {
        "key": "escape",
        "command": "extension.multiCommand.execute",
        "args": {
            "sequence": [
                "closeFindWidget",
                "extension.vim_escape"
            ]
        },
        "when": "editorFocus && findWidgetVisible && !terminalFocus || findInputFocussed || replaceInputFocussed"
    },
    {
        "key": "enter",
        "command": "workbench.action.terminal.hideFind",
        "when": "terminalFindVisible && terminalFocus"
    },
    {
        "key": "enter",
        "command": "keybindings.editor.focusKeybindings",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "enter",
        "command": "search.focus.nextInputBox",
        "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
    },
    {
        "key": "enter",
        "command": "settings.action.focusSettingsFromSearch",
        "when": "inSettingsSearch && !suggestWidgetVisible"
    },
    {
        "key": "enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorFocus && vim.mode == 'Normal' && !renameInputVisible && !findInputFocussed && !replaceInputFocussed"
    },
    {
        "key": "shift+enter",
        "command": "editor.action.insertLineBefore",
        "when": "editorFocus && vim.mode == 'Normal' && !renameInputVisible && !findInputFocussed && !replaceInputFocussed"
    },
    {
        "key": "'",
        "command": "workbench.action.showCommands",
        "when": "activeEditorGroupEmpty && !terminalFocus"
    },
    {
        "key": "shift+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorFocus && vim.mode == 'Insert' && !renameInputVisible && !findInputFocussed && !replaceInputFocussed"
    },
    {
        "key": "ctrl+i",
        "command": "editor.action.triggerSuggest",
        "when": "editorFocus && !findInputFocussed && !renameInputVisible && !replaceInputFocussed && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+a",
        "command": "editor.action.replaceAll",
        "when": "findWidgetVisible && editorFocus && vim.mode == 'Normal' && !findInputFocussed && !replaceInputFocussed"
    },
    {
        "key": "d d",
        "command": "deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "d d",
        "command": "moveFileToTrash",
        "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "shift+f",
        "command": "explorer.newFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "f",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "x",
        "command": "filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "y y",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": ".",
        "command": "toggleexcludedfiles.toggle",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "Escape",
        "command": "workbench.action.closeActiveEditor",
        "when": "!editorFocus && activeEditor == 'workbench.editor.extension' || inKeybindings && !inKeybindingsSearch"
    },
    {
        "key": "space c",
        "command": "workbench.action.files.newUntitledFile",
        "when": "activeEditorGroupEmpty && !terminalFocus && !inQuickOpen",
        "args": {"viewType": "default"}
    },
    {
        "key": "space e",
        "command": "workbench.action.files.openFile",
        "when": "activeEditorGroupEmpty && !terminalFocus && !inQuickOpen"
    },
    {
        "key": "space shift+e",
        "command": "workbench.action.files.openFolder",
        "when": "activeEditorGroupEmpty && !terminalFocus && !inQuickOpen"
    },
    {
        "key": "space f",
        "command": "workbench.action.quickOpen",
        "when": "activeEditorGroupEmpty && !terminalFocus && !inQuickOpen"
    },
    {
        "key": "space r",
        "command": "workbench.action.openRecent",
        "when": "activeEditorGroupEmpty && !terminalFocus && !inQuickOpen"
    },
    {
        "key": "ctrl+a",
        "command": "editor.action.replaceAll",
        "when": "editorFocus && replaceInputFocussed"
    },
    {
        "key": "ctrl+a",
        "command": "search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "ctrl+d",
        "command": "toggleFindWholeWord",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+d",
        "command": "workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+d",
        "command": "toggleSearchWholeWord",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.search.toggleQueryDetails",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.replaceInFiles",
        "when": "!replaceInputBoxFocus && searchViewletFocus"
    },
    {
        "key": "ctrl+r",
        "command": "closeReplaceInFilesWidget",
        "when": "replaceInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.files.action.focusFilesExplorer",
        "when": "explorerViewletVisible && openEditorsFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "outline.focus",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "search.focus.nextInputBox",
        "when": "inputBoxFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+j",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus && findInputFocussed && !terminalFocus"
    },
    {
        "key": "ctrl+j",
        "command": "actions.find",
        "when": "editorFocus && replaceInputFocussed"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || quickFixWidgetVisible"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.view.search.focus",
        "when": "!inputBoxFocus && searchViewletVisible && sideBarFocus"
    },
    {
        "key": "ctrl+j",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus && !sideBarFocus"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.files.action.focusOpenEditorsView",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.files.action.focusFilesExplorer",
        "when": "explorerViewletVisible && !filesExplorerFocus && !openEditorsFocus && !inputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "search.action.focusSearchList",
        "when": "inputBoxFocus && searchViewletVisible && searchInputBoxFocus && sideBarFocus"
    },
    {
        "key": "ctrl+k",
        "command": "search.focus.previousInputBox",
        "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus && sideBarFocus"
    },
    {
        "key": "ctrl+k",
        "command": "search.action.focusSearchFromResults",
        "when": "!inputBoxFocus && searchViewletVisible && sideBarFocus"
    },
    {
        "key": "ctrl+k",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus && findInputFocussed && !terminalFocus"
    },
    {
        "key": "ctrl+k",
        "command": "actions.find",
        "when": "editorFocus && replaceInputFocussed"
    },
    {
        "key": "ctrl+k",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus && !sideBarFocus"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+g",
        "command": "toggleFindInSelection",
        "when": "editorFocus && findInputFocussed || editorFocus && replaceInputFocussed"
    },
    {
        "key": "ctrl+n",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus && findInputFocussed || editorFocus && replaceInputFocussed"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.terminal.findNext",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+n",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || quickFixWidgetVisible"
    },
    {
        "key": "ctrl+p",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.terminal.findPrevious",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+p",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+f",
        "command": "toggleFindRegex",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+f",
        "command": "workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+f",
        "command": "toggleSearchRegex",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.replaceInFiles",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+s",
        "command": "toggleFindCaseSensitive",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+s",
        "command": "toggleSearchCaseSensitive",
        "when": "searchViewletFocus && !fileMatchOrFolderMatchFocus"
    },
    {
        "key": "ctrl+y",
        "command": "editor.action.replaceOne",
        "when": "findWidgetVisible && editorFocus && vim.mode == 'Normal' && !findInputFocussed && !replaceInputFocussed"
    },
    {
        "key": "ctrl+y",
        "command": "editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
    },
    {
        "key": "ctrl+y",
        "command": "search.action.replace",
        "when": "matchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+oem_2",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus && findInputFocussed && !terminalFocus"
    },
    {
        "key": "ctrl+oem_2",
        "command": "workbench.action.terminal.focusFind",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+oem_2",
        "command": "settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "ctrl+oem_2",
        "command": "keybindings.editor.searchKeybindings",
        "when": "inKeybindings"
    },
    {
        "key": "ctrl+oem_2",
        "command": "problems.action.focusFilter",
        "when": "focusedView == 'workbench.panel.markers.view'"
    },

    /////////////////////////////////////////////////////////////////////////////////////
    // 無効化するデフォルトキーバインド
    /////////////////////////////////////////////////////////////////////////////////////

    {
        "key": "enter",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "enter",
        "command": "-editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
    },
    {
        "key": "shift+enter",
        "command": "-editor.action.previousMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "alt+c",
        "command": "-toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "alt+l",
        "command": "-toggleFindInSelection",
        "when": "editorFocus"
    },
    {
        "key": "alt+r",
        "command": "-toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+space",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFindWidget",
        "when": "terminalFindWidgetFocused || terminalFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-actions.find"
    },
    {
        "key": "ctrl+f",
        "command": "-settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "ctrl+f",
        "command": "-keybindings.editor.searchKeybindings",
        "when": "inKeybindings"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+k e",
        "command": "-workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+x",
        "command": "-editor.action.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+x",
        "command": "-editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+x",
        "command": "-workbench.view.extensions"
    },
    {
        "key": "ctrl+oem_2",
        "command": "-toggleExplainMode",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "ctrl+oem_2",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+oem_2",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer"
    },
    {
        "key": "ctrl+k w",
        "command": "-workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "ctrl+oem_6",
        "command": "-editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFind",
        "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+i",
        "command": "-markdown.extension.editing.toggleItalic",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    }
]
